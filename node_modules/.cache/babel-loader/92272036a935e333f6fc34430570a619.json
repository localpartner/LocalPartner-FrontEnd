{"ast":null,"code":"import _toConsumableArray from \"C:\\\\localpartner-Repo\\\\LocalPartner-FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\localpartner-Repo\\\\LocalPartner-FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\localpartner-Repo\\\\LocalPartner-FrontEnd\\\\src\\\\core\\\\Checkbox.js\";\nimport React, { useState } from \"react\";\nvar Checkbox = function Checkbox(_ref) {\n  var categories = _ref.categories,\n    handleFilters = _ref.handleFilters;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    checked = _useState2[0],\n    setCheked = _useState2[1];\n  var handleToggle = function handleToggle(c) {\n    return function () {\n      // return the first index or -1\n      var currentCategoryId = checked.indexOf(c);\n      var newCheckedCategoryId = _toConsumableArray(checked);\n      // if currently checked was not already in checked state > push\n      // else pull/take off\n      if (currentCategoryId === -1) {\n        newCheckedCategoryId.push(c);\n      } else {\n        newCheckedCategoryId.splice(currentCategoryId, 1);\n      }\n      // console.log(newCheckedCategoryId);\n      setCheked(newCheckedCategoryId);\n      handleFilters(newCheckedCategoryId);\n    };\n  };\n  return categories.map(function (c, i) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      className: \"list-unstyled\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: handleToggle(c._id),\n      value: checked.indexOf(c._id === -1),\n      type: \"checkbox\",\n      className: \"form-check-input\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, c.name));\n  });\n};\nexport default Checkbox;","map":{"version":3,"names":["React","useState","Checkbox","_ref","categories","handleFilters","_useState","_useState2","_slicedToArray","checked","setCheked","handleToggle","c","currentCategoryId","indexOf","newCheckedCategoryId","_toConsumableArray","push","splice","map","i","createElement","key","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_id","value","type","name"],"sources":["C:/localpartner-Repo/LocalPartner-FrontEnd/src/core/Checkbox.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Checkbox = ({ categories, handleFilters }) => {\n    const [checked, setCheked] = useState([]);\n\n    const handleToggle = c => () => {\n        // return the first index or -1\n        const currentCategoryId = checked.indexOf(c);\n        const newCheckedCategoryId = [...checked];\n        // if currently checked was not already in checked state > push\n        // else pull/take off\n        if (currentCategoryId === -1) {\n            newCheckedCategoryId.push(c);\n        } else {\n            newCheckedCategoryId.splice(currentCategoryId, 1);\n        }\n        // console.log(newCheckedCategoryId);\n        setCheked(newCheckedCategoryId);\n        handleFilters(newCheckedCategoryId);\n    };\n\n    return categories.map((c, i) => (\n        <li key={i} className=\"list-unstyled\">\n            <input\n                onChange={handleToggle(c._id)}\n                value={checked.indexOf(c._id === -1)}\n                type=\"checkbox\"\n                className=\"form-check-input\"\n            />\n            <label className=\"form-check-label\">{c.name}</label>\n        </li>\n    ));\n};\n\nexport default Checkbox;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAAsC;EAAA,IAAhCC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,aAAa,GAAAF,IAAA,CAAbE,aAAa;EAAA,IAAAC,SAAA,GACZL,QAAQ,CAAC,EAAE,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlCG,OAAO,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAEzB,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAGC,CAAC;IAAA,OAAI,YAAM;MAC5B;MACA,IAAMC,iBAAiB,GAAGJ,OAAO,CAACK,OAAO,CAACF,CAAC,CAAC;MAC5C,IAAMG,oBAAoB,GAAAC,kBAAA,CAAOP,OAAO,CAAC;MACzC;MACA;MACA,IAAII,iBAAiB,KAAK,CAAC,CAAC,EAAE;QAC1BE,oBAAoB,CAACE,IAAI,CAACL,CAAC,CAAC;MAChC,CAAC,MAAM;QACHG,oBAAoB,CAACG,MAAM,CAACL,iBAAiB,EAAE,CAAC,CAAC;MACrD;MACA;MACAH,SAAS,CAACK,oBAAoB,CAAC;MAC/BV,aAAa,CAACU,oBAAoB,CAAC;IACvC,CAAC;EAAA;EAED,OAAOX,UAAU,CAACe,GAAG,CAAC,UAACP,CAAC,EAAEQ,CAAC;IAAA,oBACvBpB,KAAA,CAAAqB,aAAA;MAAIC,GAAG,EAAEF,CAAE;MAACG,SAAS,EAAC,eAAe;MAAAC,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACjC9B,KAAA,CAAAqB,aAAA;MACIU,QAAQ,EAAEpB,YAAY,CAACC,CAAC,CAACoB,GAAG,CAAE;MAC9BC,KAAK,EAAExB,OAAO,CAACK,OAAO,CAACF,CAAC,CAACoB,GAAG,KAAK,CAAC,CAAC,CAAE;MACrCE,IAAI,EAAC,UAAU;MACfX,SAAS,EAAC,kBAAkB;MAAAC,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAC9B,eACF9B,KAAA,CAAAqB,aAAA;MAAOE,SAAS,EAAC,kBAAkB;MAAAC,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAElB,CAAC,CAACuB,IAAI,CAAS,CACnD;EAAA,CACR,CAAC;AACN,CAAC;AAED,eAAejC,QAAQ"},"metadata":{},"sourceType":"module"}
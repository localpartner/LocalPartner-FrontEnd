{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\localpartner-Repo\\\\LocalPartner-FrontEnd\\\\src\\\\core\\\\Loading.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport { progressBarState } from \"../recoil/atom/progressBarState\";\nimport ReactLoading from \"react-loading\";\nimport '../progressbar.css';\nvar Loading = function Loading() {\n  //console.log(styles.overlay,\"Stles\")\n  var showProgressBar = useRecoilValue(progressBarState);\n  var cmp = showProgressBar == true ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      zIndex: \"1\",\n      height: \"100%\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      top: \"0\",\n      left: \"0\",\n      position: \"fixed\",\n      opacity: \"0.5\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactLoading, {\n    type: \"bars\",\n    color: \"#01a5ed\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  })) : null;\n  return cmp;\n};\nexport default Loading;","map":{"version":3,"names":["React","useState","useEffect","useRecoilValue","useRecoilState","progressBarState","ReactLoading","Loading","showProgressBar","cmp","createElement","style","width","zIndex","height","justifyContent","alignItems","top","left","position","opacity","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","color"],"sources":["C:/localpartner-Repo/LocalPartner-FrontEnd/src/core/Loading.js"],"sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport {  useRecoilValue,useRecoilState } from \"recoil\";\nimport { progressBarState } from \"../recoil/atom/progressBarState\";\nimport ReactLoading from \"react-loading\";\nimport  '../progressbar.css'; \nconst Loading = ()=>{\n    //console.log(styles.overlay,\"Stles\")\n    let showProgressBar = useRecoilValue(progressBarState)\n    let cmp = showProgressBar== true ? \n        <div style={{width:\"100%\",zIndex:\"1\", height:\"100%\",justifyContent:\"center\", alignItems:\"center\", top:\"0\",left:\"0\", position:\"fixed\", opacity:\"0.5\"}}>\n            <ReactLoading type=\"bars\" color=\"#01a5ed\" /> \n        </div>\n    : null;\n    return (\n     cmp\n    )\n\n}\n\nexport default Loading;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAAUC,cAAc,EAACC,cAAc,QAAQ,QAAQ;AACvD,SAASC,gBAAgB,QAAQ,iCAAiC;AAClE,OAAOC,YAAY,MAAM,eAAe;AACxC,OAAQ,oBAAoB;AAC5B,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAO;EAChB;EACA,IAAIC,eAAe,GAAGL,cAAc,CAACE,gBAAgB,CAAC;EACtD,IAAII,GAAG,GAAGD,eAAe,IAAG,IAAI,gBAC5BR,KAAA,CAAAU,aAAA;IAAKC,KAAK,EAAE;MAACC,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC,GAAG;MAAEC,MAAM,EAAC,MAAM;MAACC,cAAc,EAAC,QAAQ;MAAEC,UAAU,EAAC,QAAQ;MAAEC,GAAG,EAAC,GAAG;MAACC,IAAI,EAAC,GAAG;MAAEC,QAAQ,EAAC,OAAO;MAAEC,OAAO,EAAC;IAAK,CAAE;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjJ3B,KAAA,CAAAU,aAAA,CAACJ,YAAY;IAACsB,IAAI,EAAC,MAAM;IAACC,KAAK,EAAC,SAAS;IAAAR,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CAC1C,GACR,IAAI;EACN,OACClB,GAAG;AAGR,CAAC;AAED,eAAeF,OAAO"},"metadata":{},"sourceType":"module"}
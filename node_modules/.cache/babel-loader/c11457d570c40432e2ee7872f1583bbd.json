{"ast":null,"code":"import { API } from '../config';\nexport var createCategory = function createCategory(userId, token, category) {\n  return fetch(\"\".concat(API, \"/category/create/\").concat(userId), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(category)\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\nexport var updateCategory = function updateCategory(categoryId, userId, token, category) {\n  return fetch(\"\".concat(API, \"/category/\").concat(categoryId, \"/\").concat(userId), {\n    method: 'PUT',\n    headers: {\n      // content type?\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(category)\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var createProduct = function createProduct(userId, token, product) {\n  return fetch(\"\".concat(API, \"/product/create/\").concat(userId), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: product\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\nexport var getCategory = function getCategory(categoryId) {\n  return fetch(\"\".concat(API, \"/category/\").concat(categoryId), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var getCategories = function getCategories() {\n  return fetch(\"\".concat(API, \"/categories\"), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var listOrders = function listOrders(userId, token) {\n  return fetch(\"\".concat(API, \"/order/list/\").concat(userId), {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var getStatusValues = function getStatusValues(userId, token) {\n  return fetch(\"\".concat(API, \"/order/status-values/\").concat(userId), {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var updateOrderStatus = function updateOrderStatus(userId, token, orderId, status) {\n  return fetch(\"\".concat(API, \"/order/\").concat(orderId, \"/status/\").concat(userId), {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify({\n      status: status,\n      orderId: orderId\n    })\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\n\n/**\n * to perform crud on product\n * get all products\n * get a single product\n * update single product\n * delete single product\n */\n\nexport var getProducts = function getProducts() {\n  return fetch(\"\".concat(API, \"/products?limit=undefined\"), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var deleteProduct = function deleteProduct(productId, userId, token) {\n  return fetch(\"\".concat(API, \"/product/\").concat(productId, \"/\").concat(userId), {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var getProduct = function getProduct(productId) {\n  return fetch(\"\".concat(API, \"/product/\").concat(productId), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var updateProduct = function updateProduct(productId, userId, token, product) {\n  return fetch(\"\".concat(API, \"/product/\").concat(productId, \"/\").concat(userId), {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: product\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"names":["API","createCategory","userId","token","category","fetch","concat","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","updateCategory","categoryId","createProduct","product","getCategory","getCategories","listOrders","getStatusValues","updateOrderStatus","orderId","status","getProducts","deleteProduct","productId","getProduct","updateProduct"],"sources":["C:/localpartner-Repo/LocalPartner-FrontEnd/src/user/apiAdmin.js"],"sourcesContent":["import { API } from '../config';\n\nexport const createCategory = (userId, token, category) => {\n    return fetch(`${API}/category/create/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const updateCategory = (categoryId, userId, token, category) => {\n    return fetch(`${API}/category/${categoryId}/${userId}`, {\n        method: 'PUT',\n        headers: {\n            // content type?\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const createProduct = (userId, token, product) => {\n    return fetch(`${API}/product/create/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const getCategory = categoryId => {\n    return fetch(`${API}/category/${categoryId}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getCategories = () => {\n    return fetch(`${API}/categories`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const listOrders = (userId, token) => {\n    return fetch(`${API}/order/list/${userId}`, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getStatusValues = (userId, token) => {\n    return fetch(`${API}/order/status-values/${userId}`, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\n        method: 'PUT',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ status, orderId })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n/**\n * to perform crud on product\n * get all products\n * get a single product\n * update single product\n * delete single product\n */\n\nexport const getProducts = () => {\n    return fetch(`${API}/products?limit=undefined`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const deleteProduct = (productId, userId, token) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getProduct = productId => {\n    return fetch(`${API}/product/${productId}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateProduct = (productId, userId, token, product) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: 'PUT',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}